/*
    La propiedad position nos permite posicionar los elementos.
    Hay algunos conceptos que debes conocer para entender position
    
    Flujo de renderizado -> Por norma general los elementos se dibujan
    de izquierda a derecha y de arriba abajo.
    El punto 0,0 de los elementos, por norma general, es la
    esquina superior izquerda.
    
    Espacio reservado -> Es el espacio que tiene un elemento
    asignado en el navegador.
    
    Elemento posicionamiento -> Esto significa que el elemento tiene
    la propiedad position con un valor distinto de "static", que es 
    el valor que tiene esta propiedad por defecto
    
    Stack in context -> Contexto de apilamiento. Es el orden en el que se
    apilaran las cajas que se superponen, dentro del mismo contenedor
    
    Al posicionar un elemento se habilitan 5 propiedades que podemos utilizar
    para mover los elementos en los 3 ejes.
    
        top -> El elemento se moverá desde la parte superior la distancia que 
        le hayamos indicado.
    
        right -> El elemento se moverá desde la derecha la distancia que le 
        hayamos indicado.
    
        bottom -> El elemento se moverá desde la aprte derecha la distancia que 
        hayamos indicado.
    
        left -> El elemento se moverá desde la parte izquerda la distancia que le
        hayamos indicado
    
        z-index -> Nos permite mover el elemento en el contexto en el contexto de 
        apilamiento(eje z)


        NOTA: Si a un elemento le declaramos la propiedad top y/o Left. las propiedades
        bottom y/o right no funcionaran.
    
    Los posibles valores que le podemos dar a
    position son.

        Static -> Es el valor que tiene por defecto un elemento, con este valor el elemento
        NO ESTA POSICIONADO y por lo cual no podremos moverlo

        Relative -> El elemento mantendra su posicion y medidas en el flujo de renderizado
        y mantendra su espacio reservado. Si lo movemos Lo hará usando su posicíon en el html
        como punto de referencia.

        Absolute -> El elemento perderá sus medidas y su espacio reservado. Si lo movemos
        usará el elemento padre posicionado como referencia. Si no tiene ninguno, usará el elemento
        html de referencia.

        Fixed -> El elemento perdera sus medidas y su espacio reservado. 
        Si lo movemos usará el elemento html de referencia, y ademas se quedará fijo en esa posicion
        aunque hagamos scrooll





*/
* {
  box-sizing: border-box;
}
body {
  background-color: rgba(255, 255, 255, 0.281);
  color: rgb(0, 0, 0);
  margin: 0;
}
.header {
  height: 200px;
  background-color: rgba(179, 66, 66, 0.582);
  margin-bottom: 40px;
  text-align: center;
}
article {
  background-color: rgba(210, 105, 30, 0.521);
  
}

.menu {
  background-color: aliceblue;
  position: sticky;
  top: 0;
}


.box {
  z-index: 0;
  width: 100px;
  height: 100px;
  text-align: center;
  margin-bottom: -60px;
}
.box1 {
  background-color: brown;
  position: relative;
  z-index: 2;
}
.box2 {
  background-color: rgb(206, 178, 52);
  position: relative;
  z-index: 1;
}

.box3 {
  background-color: rgb(42, 136, 165);
  z-index: 0;
}


